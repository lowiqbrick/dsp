pub mod item_enum_support {
    // fmt for the Display Trait
    use std::fmt;

    // this file is supposed to contain an enum that is used to represent the items
    // in the game, so the hashmap containing all items doesn't need to
    // contain Strings, which are prone to spelling errors
    /// enum for representing all items in the game
    #[derive(PartialEq, Copy, Clone, Debug, Eq, Hash)]
    pub enum ItemEnum {
        IronOre,
        CopperOre,
        Stone,
        Coal,
        SiliconOre,
        TitaniumOre,
        Water,
        CrudeOil,
        Hydrogen,
        Deuterium,
        AntiMatter,
        CoreElement,
        CriticalPhoton,
        KimberliteOre,
        FractalSilicon,
        GratingCrystal,
        StalagmiteOre,
        UnipolarMagnet,
        FireIce,
        Log,
        PlantFuel,
        DarkFogMatrix,
        EnergyShard,
        SiliconBasedNeuron,
        NegentropySingularity,
        MatterRecombinator,
        IronIngot,
        CopperIngot,
        StoneBrick,
        EnergeticGraphite,
        HighPuritySilicon,
        TitaniumIngot,
        SulfuricAcid,
        RefinedOil,
        Magnet,
        MagneticCoil,
        Glass,
        Diamond,
        CrystalSilicon,
        Steel,
        TitaniumAlloy,
        CircuitBoard,
        Prism,
        ElectricMotor,
        MicrocrystallineComponent,
        Gear,
        PlasmaExciter,
        PhotonCombiner,
        ElectromagenticTurbine,
        Processor,
        Engine,
        Thruster,
        ReinforcedThruster,
        SuperMagenticRing,
        ParticleContainer,
        Plastic,
        OrganicCrystal,
        Graphene,
        AnnihilationConstraintSphere,
        StrangeMatter,
        TitaniumCrystal,
        CarbonNanotube,
        ParticleBroadband,
        CasimirCrystal,
        TitaniumGlass,
        PlaneFilter,
        QuantumChip,
        CombustibleUnit,
        LogisticsBot,
        LogisticsDrone,
        InterstellarLogisticsVessel,
        GravitonLens,
        SpaceWarper,
        Foundation,
        ProliferatorMki,
        ProliferatorMkii,
        ProliferatorMkiii,
        HydrogenFuelRod,
        DeuteriumFuelRod,
        AntimatterFuelRod,
        StrangeAnnihilationFuelRod,
        SolarSail,
        FrameMaterial,
        DysonSphereComponent,
        SmallCarrierRocket,
        ElectromagneticMatrix,
        EnergyMatrix,
        StructureMatrix,
        InformationMatrix,
        GravityMatrix,
        UniverseMatrix,
        MagnumAmmoBox,
        TitaniumAmmoBox,
        SuperalloyAmmoBox,
        ExplosiveUnit,
        CrystalExplosiveUnit,
        MissileSet,
        SupersonicMissileSet,
        GravityMissileSet,
        ShellSet,
        HighExplosiveShellSet,
        CrystalShellSet,
        PlasmaCapsule,
        AntimatterCapsule,
        JammingCapsule,
        SupressingCapsule,
        Prototype,
        PrecisionDrone,
        AttackDrone,
        Corvette,
        Destroyer,
    }

    // implement conversion of enum to string for final output
    impl ItemEnum {
        pub fn to_string(&self) -> String {
            let result = match &self {
                ItemEnum::IronOre => "Iron Ore",
                ItemEnum::CopperOre => "Copper Ore",
                ItemEnum::Stone => "Stone",
                ItemEnum::Coal => "Coal",
                ItemEnum::SiliconOre => "Silicon Ore",
                ItemEnum::TitaniumOre => "Titanium Ore",
                ItemEnum::Water => "Water",
                ItemEnum::CrudeOil => "Crude Oil",
                ItemEnum::Hydrogen => "Hydrogen",
                ItemEnum::Deuterium => "Deuterium",
                ItemEnum::AntiMatter => "Anti Matter",
                ItemEnum::CoreElement => "Core Element",
                ItemEnum::CriticalPhoton => "Critical Photon",
                ItemEnum::KimberliteOre => "Kimberlite Ore",
                ItemEnum::FractalSilicon => "Fractal Silicon",
                ItemEnum::GratingCrystal => "Grating Crystal",
                ItemEnum::StalagmiteOre => "Stalagmite Ore",
                ItemEnum::UnipolarMagnet => "Unipolar Magnet",
                ItemEnum::FireIce => "Fire Ice",
                ItemEnum::Log => "Log",
                ItemEnum::PlantFuel => "Plant Fuel",
                ItemEnum::DarkFogMatrix => "Dark Fog Matrix",
                ItemEnum::EnergyShard => "Energy Shard",
                ItemEnum::SiliconBasedNeuron => "Silicon Based Neuron",
                ItemEnum::NegentropySingularity => "Negentropy Singularity",
                ItemEnum::MatterRecombinator => "Matter Recombinator",
                ItemEnum::IronIngot => "Iron Ingot",
                ItemEnum::CopperIngot => "Copper Ingot",
                ItemEnum::StoneBrick => "Stone Brick",
                ItemEnum::EnergeticGraphite => "Energetic Graphite",
                ItemEnum::HighPuritySilicon => "high purity Silicone",
                ItemEnum::TitaniumIngot => "Titanium Ingot",
                ItemEnum::SulfuricAcid => "Sulfuric Acid",
                ItemEnum::RefinedOil => "Refined Oil",
                ItemEnum::Magnet => "Magent",
                ItemEnum::MagneticCoil => "Magnetic Coil",
                ItemEnum::Glass => "Glass",
                ItemEnum::Diamond => "Diamond",
                ItemEnum::CrystalSilicon => "Crystal Silicon",
                ItemEnum::Steel => "Steel",
                ItemEnum::TitaniumAlloy => "Titanium Alloy",
                ItemEnum::CircuitBoard => "Circuit Board",
                ItemEnum::Prism => "Prism",
                ItemEnum::ElectricMotor => "Electric Motor",
                ItemEnum::MicrocrystallineComponent => "Microcrystalline Component",
                ItemEnum::Gear => "Gear",
                ItemEnum::PlasmaExciter => "Plasma Exciter",
                ItemEnum::PhotonCombiner => "Photon Combiner",
                ItemEnum::ElectromagenticTurbine => "Electromagentic Turbine",
                ItemEnum::Processor => "Processor",
                ItemEnum::Engine => "Engine",
                ItemEnum::Thruster => "Thruster",
                ItemEnum::ReinforcedThruster => "Reinforced Thruster",
                ItemEnum::SuperMagenticRing => "Super magnetic Ring",
                ItemEnum::ParticleContainer => "Particle Container",
                ItemEnum::Plastic => "Plastic",
                ItemEnum::OrganicCrystal => "Organic Crystal",
                ItemEnum::Graphene => "Graphene",
                ItemEnum::AnnihilationConstraintSphere => "Annihilation Constraint Sphere",
                ItemEnum::StrangeMatter => "Strange Matter",
                ItemEnum::TitaniumCrystal => "Titanium Crystal",
                ItemEnum::CarbonNanotube => "Carbon Nanotube",
                ItemEnum::ParticleBroadband => "Particle Broadband",
                ItemEnum::CasimirCrystal => "Casimir Crystal",
                ItemEnum::TitaniumGlass => "Titanium Glass",
                ItemEnum::PlaneFilter => "Plane Filter",
                ItemEnum::QuantumChip => "Quantum Chip",
                ItemEnum::CombustibleUnit => "Combustible Unit",
                ItemEnum::LogisticsBot => "Logistics Bot",
                ItemEnum::LogisticsDrone => "Logistics Drone",
                ItemEnum::InterstellarLogisticsVessel => "Interstellar Logistics Vessel",
                ItemEnum::GravitonLens => "Graviton Lens",
                ItemEnum::SpaceWarper => "Space Warper",
                ItemEnum::Foundation => "Foundation",
                ItemEnum::ProliferatorMki => "Proliferator Mark I",
                ItemEnum::ProliferatorMkii => "Proliferator Mark II",
                ItemEnum::ProliferatorMkiii => "Proliferator Mark III",
                ItemEnum::HydrogenFuelRod => "Hydrogen Fuel Rod",
                ItemEnum::DeuteriumFuelRod => "Deuterium Fuel Rod",
                ItemEnum::AntimatterFuelRod => "Antimatter Fuel Rod",
                ItemEnum::StrangeAnnihilationFuelRod => "Annihilation Fuel Rod",
                ItemEnum::SolarSail => "Solar Sail",
                ItemEnum::FrameMaterial => "Frame Material",
                ItemEnum::DysonSphereComponent => "Dysonsphere Component",
                ItemEnum::SmallCarrierRocket => "Small Carrier Rocket",
                ItemEnum::ElectromagneticMatrix => "Electromagentic Matrix",
                ItemEnum::EnergyMatrix => "Energy Matrix",
                ItemEnum::StructureMatrix => "Structure Matrix",
                ItemEnum::InformationMatrix => "Information Matrix",
                ItemEnum::GravityMatrix => "Gravity Matrix",
                ItemEnum::UniverseMatrix => "Universe Matrix",
                ItemEnum::MagnumAmmoBox => "Magnum Ammo Box",
                ItemEnum::TitaniumAmmoBox => "Titanium Ammo Box",
                ItemEnum::SuperalloyAmmoBox => "Spueralloy Ammo Box",
                ItemEnum::ExplosiveUnit => "Explosive Unit",
                ItemEnum::CrystalExplosiveUnit => "Crystal Explosive Unit",
                ItemEnum::MissileSet => "Missile Set",
                ItemEnum::SupersonicMissileSet => "Supersonic Missile Set",
                ItemEnum::GravityMissileSet => "Gravity Missile Set",
                ItemEnum::ShellSet => "Shell Set",
                ItemEnum::HighExplosiveShellSet => "High Explosive Shell Set",
                ItemEnum::CrystalShellSet => "Crystal Shell Set",
                ItemEnum::PlasmaCapsule => "Plasma Capsule",
                ItemEnum::AntimatterCapsule => "Antimatter Capsule",
                ItemEnum::JammingCapsule => "Jammig Capsule",
                ItemEnum::SupressingCapsule => "Supressing Capsule",
                ItemEnum::Prototype => "Prototype",
                ItemEnum::PrecisionDrone => "Precision Drone",
                ItemEnum::AttackDrone => "Attack Drone",
                ItemEnum::Corvette => "Corvette",
                ItemEnum::Destroyer => "Destroyer",
            };
            result.to_string()
        }
    }

    // implement printing the ItemEnum
    impl fmt::Display for ItemEnum {
        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
            write!(f, "{}", self.to_string())
        }
    }
}
